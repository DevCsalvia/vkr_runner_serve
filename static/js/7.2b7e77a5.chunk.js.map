{"version":3,"sources":["shared/FieldCreateFunction.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Login/Login.module.css","containers/Auth/InputsArr/InputsArr.js","containers/Auth/Login/Login.js","containers/Auth/SignUp/SignUp.js","containers/Auth/Auth.js"],"names":["FieldCreateFunction","fieldData","elementType","elType","elementConfig","elConfig","value","validation","valid","touched","Input","props","inputElement","addClassesArr","addClasses","split","forEach","addClass","push","classes","Input_FieldBlackBorder","Input_NotValid","className","join","onChange","changed","InputElement","options","map","option","displayValue","Input_Field","placeholder","module","exports","InputsArr","InputsDataArr","formElement","config","invalid","shouldValidate","valueType","id","e","inputChangedHandler","formData","setFormData","Login","useState","email","eltype","type","required","isEmail","password","minLength","loginForm","setLoginForm","formElementsMarkupArray","key","onSubmit","submitHandler","Auth__Login__BtnWrapper","Button","SignUpForm","firstName","lastName","signUpForm","setSignUpForm","Auth","dispatch","useDispatch","redirectPath","useSelector","state","auth","authRedirectPath","isAuthenticated","token","loading","event","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","preventDefault","actions","authRedirect","to","Loader","Auth__Content","Auth__LoginFormWrapper","Auth__Content_Separator","Auth__Signup","SignUp"],"mappings":"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","file":"static/js/7.2b7e77a5.chunk.js","sourcesContent":["export const FieldCreateFunction = (fieldData) => {\r\n    return {\r\n        elementType: fieldData.elType,\r\n        elementConfig: { ...fieldData.elConfig },\r\n        value: fieldData.value ? fieldData.value : '',\r\n        validation: { ...fieldData.validation },\r\n        valid: fieldData.valid ? fieldData.valid : false,\r\n        touched: fieldData.touched ? fieldData.touched : false\r\n    };\r\n};","import classes from './Input.module.css';\r\n\r\nconst Input = props => {\r\n    let inputElement = null;\r\n\r\n    const addClassesArr = [];\r\n    if (props.addClasses) {\r\n        props.addClasses.split(' ').forEach(addClass => {\r\n            switch (addClass) {\r\n                case 'input_fieldBlackBorder': addClassesArr.push(classes.Input_FieldBlackBorder); break;\r\n                case 'input_NotValid': addClassesArr.push(classes.Input_NotValid); break;\r\n                default: break;\r\n            }\r\n        });\r\n    };\r\n\r\n    switch (props.elementType) {\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={classes.join(' ')}\r\n                value={props.value}\r\n                {...props.elementConfig}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={classes.InputElement}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option =>\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    )}\r\n                </select>\r\n            );\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input\r\n                className={classes.Input_Field + ' ' + addClassesArr.join(' ')}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n                placeholder={props.placeholder}\r\n                {...props.elementConfig} />\r\n    }\r\n\r\n    return (inputElement);\r\n}\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input_Field\":\"Input_Input_Field__1tBa-\",\"Input_FieldBlackBorder\":\"Input_Input_FieldBlackBorder__15vnl\",\"Input_NotValid\":\"Input_Input_NotValid__1vi55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3M8mF\",\"Auth__Content\":\"Auth_Auth__Content__2IRc8\",\"Auth__Signup\":\"Auth_Auth__Signup__2BvBm\",\"Auth__LoginFormWrapper\":\"Auth_Auth__LoginFormWrapper__WLrFw\",\"Auth__Content_Separator\":\"Auth_Auth__Content_Separator__1IOLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth__Login__BtnWrapper\":\"Login_Auth__Login__BtnWrapper__350aq\"};","import Input from '../../../components/UI/Input/Input';;\r\n\r\nconst InputsArr = props => props.InputsDataArr.map(formElement => (\r\n    <Input\r\n        key={formElement.id}\r\n        addClasses={`input_fieldBlackBorder ${formElement.config.touched ? formElement.config.valid ? '' : 'input_NotValid' : ''}`}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        valueType={formElement.id}\r\n        changed={(e) => props.inputChangedHandler(e, formElement.id, props.formData, props.setFormData)} />\r\n));\r\n\r\nexport default InputsArr;","import { useState } from 'react';\r\nimport { FieldCreateFunction } from '../../../shared/FieldCreateFunction';\r\n\r\nimport classes from './Login.module.css';\r\n\r\n// UI components\r\nimport Button from '../../../components/UI/Button/Button';\r\n\r\nimport InputsArr from '../InputsArr/InputsArr';\r\n\r\nconst Login = props => {\r\n    // fields data\r\n    const [loginForm, setLoginForm] = useState({\r\n        email: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'email',\r\n                placeholder: 'Email'\r\n            },\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            }\r\n        }),\r\n        password: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        })\r\n    });\r\n\r\n    // Fields markup Login\r\n    const formElementsMarkupArray = [];\r\n    for (let key in loginForm) {\r\n        formElementsMarkupArray.push({\r\n            id: key,\r\n            config: loginForm[key]\r\n        })\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={(e) => props.submitHandler(e, loginForm)}>\r\n            <h2>\r\n                LOGIN\r\n                        </h2>\r\n            <InputsArr\r\n                InputsDataArr={formElementsMarkupArray}\r\n                inputChangedHandler={props.inputChangedHandler}\r\n                formData={loginForm}\r\n                setFormData={setLoginForm}\r\n            />\r\n            <div className={classes.Auth__Login__BtnWrapper}>\r\n                <Button addClass=\"Button--Black\">Sign in</Button>\r\n                <span>Forgot password?</span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;","import { useState } from 'react';\r\nimport { FieldCreateFunction } from '../../../shared/FieldCreateFunction';\r\n\r\n// UI components\r\nimport Button from '../../../components/UI/Button/Button';\r\n\r\nimport InputsArr from '../InputsArr/InputsArr';\r\n\r\nconst SignUpForm = props => {\r\n\r\n    // fields data\r\n    const [signUpForm, setSignUpForm] = useState({\r\n        firstName: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'text',\r\n                placeholder: 'First Name'\r\n            }\r\n        }),\r\n        lastName: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'text',\r\n                placeholder: 'Last Name'\r\n            }\r\n        }),\r\n        email: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'email',\r\n                placeholder: 'Email'\r\n            },\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            }\r\n        }),\r\n        password: FieldCreateFunction({\r\n            eltype: 'input',\r\n            elConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        })\r\n    });\r\n\r\n    // Fields markup Sign Up\r\n    const formElementsMarkupArray = [];\r\n    for (let key in signUpForm) {\r\n        formElementsMarkupArray.push({\r\n            id: key,\r\n            config: signUpForm[key]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => props.submitHandler(e, signUpForm, true)}>\r\n            <h2>\r\n                SIGN UP / CREATE NEW ACCOUNT\r\n                        </h2>\r\n\r\n            <InputsArr\r\n                InputsDataArr={formElementsMarkupArray}\r\n                inputChangedHandler={props.inputChangedHandler}\r\n                formData={signUpForm}\r\n                setFormData={setSignUpForm}\r\n            />\r\n            <Button addClass=\"Button--Black\">Create Account</Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\n\r\nimport classes from \"./Auth.module.css\";\r\n\r\n// UI components\r\nimport Loader from '../../components/UI/Loader/Loader';\r\n\r\n// Forms login/signup\r\nimport LoginForm from './Login/Login';\r\nimport SignUpForm from './SignUp/SignUp';\r\n\r\nconst Auth = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    // Where redirect to after sign in/up\r\n    const redirectPath = useSelector(state => state.auth.authRedirectPath);\r\n    // Authenticated flag\r\n    const isAuthenticated = useSelector(state => state.auth.token !== null);\r\n    const loading = useSelector(state => state.auth.loading);\r\n\r\n    // Fields Changed Handler\r\n    const inputChangedHandler = (event, inputIdentifier, formData, setFormData) => {\r\n\r\n        // DEEP CLONING\r\n        const updatedFormElement = updateObject(formData[inputIdentifier], {\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value, formData[inputIdentifier].validation),\r\n            touched: true\r\n        });\r\n\r\n        const updatedOrderForm = updateObject(formData, {\r\n            [inputIdentifier]: updatedFormElement\r\n        });\r\n\r\n        setFormData(updatedOrderForm);\r\n    };\r\n\r\n    // Form Submit Handler\r\n    const submitHandler = (e, formData, type) => {\r\n        e.preventDefault();\r\n        dispatch(actions.authUser(formData, type ? type : false));\r\n    }\r\n\r\n    // REDIRECT AFTER SIGN IN/UP\r\n    let authRedirect = null;\r\n    if (isAuthenticated) {\r\n        authRedirect = <Redirect to={redirectPath} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Auth + ' Auth'}>\r\n            {authRedirect}\r\n            {loading ? <Loader /> : ''}\r\n            <div className={classes.Auth__Content}>\r\n                <div className={classes.Auth__LoginFormWrapper}>\r\n                    <LoginForm\r\n                        inputChangedHandler={inputChangedHandler}\r\n                        submitHandler={submitHandler}\r\n                    />\r\n                </div>\r\n                <div className={classes.Auth__Content_Separator}>\r\n                    <span>OR</span>\r\n                </div>\r\n                <div className={classes.Auth__Signup}>\r\n                    <SignUpForm\r\n                        inputChangedHandler={inputChangedHandler}\r\n                        submitHandler={submitHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;"],"sourceRoot":""}